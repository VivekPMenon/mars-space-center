import React, { useRef } from 'react';
import { ICellRendererParams } from 'ag-grid-community';

function UploadCellRenderer(props: ICellRendererParams): JSX.Element {
  const fileInputRef = useRef<HTMLInputElement>(null);

  function handleLinkClick(): void {
    fileInputRef.current?.click();
  }

  function handleFileChange(event: React.ChangeEvent<HTMLInputElement>): void {
    const file = event.target.files?.[0];
    if (!file) return;

    const reader = new FileReader();
    reader.onload = function () {
      const result = reader.result;
      if (result instanceof ArrayBuffer) {
        const blob = new Blob([result], { type: file.type });
        uploadToApi(file.name, blob);
      }
    };
    reader.readAsArrayBuffer(file);
  }

  function uploadToApi(fileName: string, blob: Blob): void {
    const payload = {
      fileName,
      blob,
    };

    fetch('https://your-api-url.com/upload', {
      method: 'POST',
      body: JSON.stringify(payload),
      headers: {
        'Content-Type': 'application/json',
      },
    })
      .then(function (res) { return res.json(); })
      .then(function (data) {
        console.log('Upload successful:', data);
      })
      .catch(function (error) {
        console.error('Upload failed:', error);
      });
  }

  return (
    <div>
      <a href='#' onClick={function (e) { e.preventDefault(); handleLinkClick(); }}>
        Upload Document
      </a>
      <input
        type='file'
        ref={fileInputRef}
        style={{ display: 'none' }}
        onChange={handleFileChange}
      />
    </div>
  );
}

export default UploadCellRenderer;
