[ApiController]
[Route("api/[controller]")]
public class UploadController : ControllerBase
{
  [HttpPost]
  [Route("upload")]
  public async Task<IActionResult> Upload([FromBody] FileUploadModel model)
  {
    if (string.IsNullOrWhiteSpace(model.Blob) || string.IsNullOrWhiteSpace(model.FileName))
      return BadRequest("Missing file name or content.");

    try
    {
      byte[] fileBytes = Convert.FromBase64String(model.Blob);

      var uploadsPath = Path.Combine(Directory.GetCurrentDirectory(), "wwwroot", "uploads");
      if (!Directory.Exists(uploadsPath))
      {
        Directory.CreateDirectory(uploadsPath);
      }

      var filePath = Path.Combine(uploadsPath, model.FileName);
      await System.IO.File.WriteAllBytesAsync(filePath, fileBytes);

      return Ok(new { message = "File uploaded successfully", path = filePath });
    }
    catch (FormatException)
    {
      return BadRequest("Invalid base64 string.");
    }
    catch (Exception ex)
    {
      return StatusCode(500, $"Internal server error: {ex.Message}");
    }
  }
}
